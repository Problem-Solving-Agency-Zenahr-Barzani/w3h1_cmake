@startuml what-process-125
scale 700 width
skinparam backgroundColor #FFEBDC
scale 1

skinparam Folder {
  backgroundColor Olive
  borderColor orange
}

'left to right direction
Folder "Project Root Folder" as project_cmake {
    rectangle CMakeLists.txt <<Folder: ./>> as begin
}

Folder "Folder 'src'" as src_dir {
    rectangle CMakeLists.txt <<Folder: ./src/>> as src_list

    note top of src_list
        add_executable( main_125 main.cxx )
        target_include_directories(
            main_125 
            PRIVATE 
            ${SQLITE_INCLUDE_DIR} ${_PROJECT_CONFIG_DIR} )
        target_link_libraries(
            main_125 PRIVATE ${SQLITE_LIBRARY} )
    endnote
}

package "Folder on MacOS '/usr/local'" <<External Library 'sqlite3'>> as usr_local_dir {
    package "Folder './Cellar'" as cellar_dir {
        rectangle "sqlite3.h" <<Folder: ./sqlite3/3.31.1/include>> as cellar_sqlite3_h
        rectangle "sqlite3.dylib" <<Folder: ./sqlite3/3.31.1/lib>> as cellar_sqlite3_dylib
    }

    package "Folder './opt'" as opt_dir {
        rectangle "sqlite3.h" <<Folder: ./sqlite3/include>> as opt_sqlite3_h
        rectangle "sqlite3.dylib" <<Folder: ./sqlite3/lib>> as opt_sqlite3_dylib
    }
}

package "Folder on Ubuntu '/usr'" <<External Library 'sqlite3'>> as usr_dir {
    package "Folder '/usr/include'" as ubuntu_include_dir {
        rectangle "sqlite3.h" <<Include File>> as usr_sqlite3_h
    }
    package "Folder '/usr/lib/x86_64-linux-gnu'" as ubuntu_lib_dir {
        rectangle "sqlite3.so" <<Library File>> as usr_sqlite3_so
    }
}


begin *--> src_list
cellar_dir *--> opt_dir
src_list *--> opt_dir
src_list *--> usr_dir

title
    What Kind of Bridge is The CMake's Command without the 'find_package'?
end title

header
<font color=red>Tips: version 1.0</font>
endheader

center footer Develop C/C++ Application with the 'CMake'

@enduml